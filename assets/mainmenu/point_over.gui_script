function init(self)
	-- Acquire input focus
	msg.post(".", "acquire_input_focus")

	-- Store the original position of the button
	self.start = gui.get_node("start")
	self.quit = gui.get_node("quit")
	self.quit_position = gui.get_position(self.quit)
	self.start_position = gui.get_position(self.start)
	self.start_hover_position = vmath.vector3(self.start_position)
	self.quit_hover_position = vmath.vector3(self.quit_position)
	self.start_hover_position.y = self.start_hover_position.y - 10 -- Move down by 10 units
	self.quit_hover_position.y = self.quit_hover_position.y - 10
	self.start_is_over = false -- <4>
	self.quit_is_over = false
end

function on_input(self, action_id, action)
	-- Get the mouse position
	if action_id == nil then --<5>
		if gui.pick_node(self.start, action.x, action.y) then -- <6>
			if not self.start_is_over then
				-- Move the button down when hovered
				gui.set_position(self.start, self.start_hover_position)
				self.start_is_over = true
			end
		else
			if self.start_is_over then
			-- Reset to the original position when not hovered
				gui.set_position(self.start, self.start_position)
				self.start_is_over = false
			end
		end

		if gui.pick_node(self.quit, action.x, action.y) then -- <6>
			if not self.quit_is_over then
				-- Move the button down when hovered
				gui.set_position(self.quit, self.quit_hover_position)
				self.quit_is_over = true
			end
		else
			if self.quit_is_over then
				-- Reset to the original position when not hovered
				gui.set_position(self.quit, self.quit_position)
				self.quit_is_over = false
			end
		end
	
	end

	if(action_id == hash("attack") and action.released) then
		if(gui.pick_node(self.start, action.x, action.y)) then
			msg.post("load:/go#load", "start")
		end
	end

	if(action_id == hash("attack") and action.released) then

		if(gui.pick_node(self.quit, action.x, action.y)) then
			msg.post("@system:", "exit", {code = 0})
		end
	end
end
