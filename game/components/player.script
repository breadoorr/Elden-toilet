local speed = 5
local direction = 1

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	print("player")
	
end

-- function final(self)
-- 	-- Add finalization code here
-- 	-- Learn more: https://defold.com/manuals/script/
-- 	-- Remove this function if not needed
-- end
-- 
-- function update(self, dt)
-- 	-- Add update code here
-- 	-- Learn more: https://defold.com/manuals/script/
-- 	-- Remove this function if not needed
-- end
-- 
-- function fixed_update(self, dt)
-- 	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
-- 	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
-- 	-- Physics section of game.project
-- 	-- Add update code here
-- 	-- Learn more: https://defold.com/manuals/script/
-- 	-- Remove this function if not needed
-- end

function on_message(self, message_id, message, sender)

end

function walk(action)
	if action.pressed then 
		sprite.play_flipbook("#sprite", "walk")
		sound.play("#step")
		sound.stop("#axe")
	elseif action.released then
		sprite.play_flipbook("#sprite", "idle")
		sound.stop("#step")
	end
	
	local position = go.get_position() 

	position.x = position.x + speed * direction
	sprite.set_hflip("#sprite", direction < 0)
	if(position.x - 40 >= 1 and position.x + 40 < window.get_size()) then
		go.set_position(position)
	end 
end



function attack(self, callback)
	sprite.play_flipbook("#sprite", "attack", function(self, message_id, message, sender)
		sound.play("#axe")
		if message_id == hash("animation_done") then
			if callback then
				callback(self)
			end
		end
	end)
	sprite.set_hflip("#sprite", direction < 0)
end


function on_attack_finished(self)
	sprite.play_flipbook("#sprite", "idle")
end


function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed

	if action_id == hash("right") then 
		direction = 1
		walk(action)
	elseif action_id == hash("left") then
		direction = -1
		walk(action)
	end

	if action_id == hash("attack") then 
		attack(self, on_attack_finished)
	end
-- 

	
end

-- function on_reload(self)
-- 	-- Add reload-handling code here
-- 	-- Learn more: https://defold.com/manuals/hot-reload/
-- 	-- Remove this function if not needed
-- end
